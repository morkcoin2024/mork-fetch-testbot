name: Watchlist Tests

on:
  pull_request:
  push:
    branches: [ main, master ]
  workflow_dispatch:
  schedule:
    - cron: "17 3 * * *" # nightly

env:
  PYTHONPATH: .

jobs:
  smoke:
    name: Smoke (scanners OFF)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps (best-effort)
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else
            # minimal deps used by the tests/app with version constraints
            python -m pip install "httpx>=0.26" "python-telegram-bot>=20" "websockets>=10"
          fi

      - name: Run smoke tests (direct)
        run: |
          python tests/test_watchlist.py
          python tests/test_watchlist_edge.py
          python tests/test_watch_remove.py
          python tests/test_watchlist_scale.py

  online:
    name: Online (scanners ON)
    runs-on: ubuntu-latest
    needs: smoke
    timeout-minutes: 25
    # Only run if a Solscan key is available (note: secrets aren't exposed to fork PRs)
    if: ${{ secrets.SOLSCAN_API_KEY != '' }}
    env:
      FETCH_ENABLE_SCANNERS: "1"
      FEATURE_WS: "on"
      TEST_TIMEOUT: "12"
      SOLSCAN_API_KEY: ${{ secrets.SOLSCAN_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps (best-effort)
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          else
            python -m pip install "httpx>=0.26" "python-telegram-bot>=20" "websockets>=10"
          fi

      - name: Run online tests (scanners ON)
        run: |
          python tests/test_watchlist.py
          python tests/test_watchlist_edge.py
          python tests/test_watchlist_scale.py