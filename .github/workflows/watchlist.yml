name: Watchlist tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '17 3 * * *' # nightly @ 03:17 UTC

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  smoke:
    name: Smoke (scanners OFF)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PYTHONUNBUFFERED: "1"
      PYTHONPATH: .
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (if present)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Run smoke tests
        run: |
          python3 tests/test_watchlist.py
          python3 tests/test_watchlist_edge.py
          python3 tests/test_watch_remove.py
          python3 tests/test_watchlist_scale.py

  full:
    name: Full (scanners ON)
    needs: smoke
    # Skip for pull_request runs (secrets unavailable on forks)
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      PYTHONUNBUFFERED: "1"
      PYTHONPATH: .
      FETCH_ENABLE_SCANNERS: "1"
      FEATURE_WS: "on"
      TEST_TIMEOUT: "12"
      # API keys pulled from repo/org secrets (configure in Settings → Secrets and variables → Actions)
      SOLSCAN_API_KEY: ${{ secrets.SOLSCAN_API_KEY }}
      BIRDEYE_API_KEY: ${{ secrets.BIRDEYE_API_KEY }}
      JUPITER_API_KEY: ${{ secrets.JUPITER_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (if present)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Run full tests
        run: |
          python3 tests/test_watchlist.py
          python3 tests/test_watchlist_edge.py
          python3 tests/test_watch_remove.py
          python3 tests/test_watchlist_scale.py