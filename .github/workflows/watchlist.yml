name: watchlist

on:
  push:
  pull_request:

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }
      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Ruff (lint)
        run: ruff check .
      - name: Black (format check)
        run: black --check .
      - name: MyPy (type check)
        run: mypy .

  tests:
    needs: quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scanners: [off, on]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }
      - name: Install dev tools
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
      - name: Run tests (smoke, scanners OFF)
        if: matrix.scanners == 'off'
        run: |
          PYTHONPATH=. python3 tests/test_watchlist.py
          PYTHONPATH=. python3 tests/test_watchlist_edge.py
          PYTHONPATH=. python3 tests/test_watch_remove.py
          PYTHONPATH=. python3 tests/test_watchlist_scale.py
      - name: Run tests (full, scanners ON)
        if: matrix.scanners == 'on'
        env:
          FETCH_ENABLE_SCANNERS: "1"
          FEATURE_WS: "on"
          TEST_TIMEOUT: "12"
          SOLSCAN_API_KEY: ${{ secrets.SOLSCAN_API_KEY }}
        run: |
          PYTHONPATH=. python3 tests/test_watchlist.py
          PYTHONPATH=. python3 tests/test_watchlist_edge.py
          PYTHONPATH=. python3 tests/test_watch_remove.py
          PYTHONPATH=. python3 tests/test_watchlist_scale.py

      - name: Coverage (smoke only)
        if: matrix.scanners == 'off'
        run: |
          pip install coverage
          bash scripts/run_coverage.sh

      - name: Upload coverage to Codecov
        if: matrix.scanners == 'off'
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }} # omit if public repo
          fail_ci_if_error: false