Please update the Telegram bot token and fully reconfigure the webhook + verify end-to-end.

New token (for @MorkSniperBot):
8133024100:AAGQpJYAKK352Dkx93feKfbC0pM_bTVU824

Admin chat ID (unchanged): 1653046781
Public webhook URL: https://telegram-bot-morkcoin2024.replit.app/webhook

Do the following steps exactly:

1) Set secret and restart app
- In Replit Secrets, set TELEGRAM_BOT_TOKEN to:
  8133024100:AAGQpJYAKK352Dkx93feKfbC0pM_bTVU824
- Restart the application so the env loads cleanly.

2) Clean old state & register webhook
Run these commands from the workspace root:

TOKEN="$(python3 -c 'import os;print(os.getenv("TELEGRAM_BOT_TOKEN","").strip())')"
APP_URL='https://telegram-bot-morkcoin2024.replit.app/webhook'

echo "Using token len: ${#TOKEN}"
curl -sS "https://api.telegram.org/bot${TOKEN}/deleteWebhook?drop_pending_updates=true"
sleep 1
curl -sS -X POST "https://api.telegram.org/bot${TOKEN}/setWebhook" \
  -d "url=${APP_URL}" \
  -d "allowed_updates[]=message" \
  -d "allowed_updates[]=callback_query" \
  -d "drop_pending_updates=true"
echo
echo "--- getWebhookInfo ---"
curl -sS "https://api.telegram.org/bot${TOKEN}/getWebhookInfo"

3) Verify our /webhook route receives and replies
# Simulate an admin /ping via direct POST to our Flask webhook:
curl -sS "${APP_URL}" -H 'Content-Type: application/json' \
  -d '{"message":{"chat":{"id":1653046781},"from":{"id":1653046781,"username":"Drahcir196"},"text":"/ping"}}'
echo
# Tail app log for [WEBHOOK] lines:
tail -n 80 logs/app.log | sed -n 's/.*\[WEBHOOK\].*/&/p' | tail -n 20

4) Verify Telegram API sendMessage works with this token
curl -sS -X POST "https://api.telegram.org/bot${TOKEN}/sendMessage" \
  -d "chat_id=1653046781" \
  --data-urlencode "text=Token refreshed ✔️ Webhook set. Reply path OK." \
  -d "disable_web_page_preview=true" \
  -d "parse_mode=Markdown"

5) Live command sanity checks (through Telegram)
- I will send in chat: /ping, /status, /scan_status
- Please confirm in logs:
  [WEBHOOK] Received ... /ping
  [WEBHOOK] Command '/ping' processed, response sent: 200

6) Keep WebSocket disabled for now
Ensure FEATURE_WS=off so we run stable HTTP-only scanning while Birdeye WS access is pending.

If any step fails, paste the exact JSON/error. Otherwise confirm:
- getWebhookInfo shows our URL, pending_update_count=0
- sendMessage returns {"ok":true}
- /ping in Telegram replies "Pong!"
- /scan_status replies with the multi-source status block.
