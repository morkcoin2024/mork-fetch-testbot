# A) Make a UTC tag + gather fingerprints
TS=$(date -u +"%Y-%m-%dT%H-%M-%SZ"); REL="tg-stable-${TS}"
mkdir -p release_logs releases

python3 - <<'PY'
import os, json, hashlib, inspect, time, app
def sha(p): 
    try: return hashlib.sha256(open(p,"rb").read()).hexdigest()
    except: return "missing"
info = {
  "release_ts_utc": time.strftime("%Y-%m-%dT%H:%M:%SZ", time.gmtime()),
  "mode": "Polling (integrated)",
  "has_tg_send": hasattr(app, "tg_send"),
  "router_hash": hash(inspect.getsource(app.process_telegram_command)),
  "files": {p: sha(p) for p in [
      "app.py","telegram_polling.py","production_polling_bot.py","working_polling_bot.py"
  ]},
  "env_summary": {
    "TELEGRAM_BOT_TOKEN_len": len(os.getenv("TELEGRAM_BOT_TOKEN","")),
    "ASSISTANT_ADMIN_TELEGRAM_ID_set": bool(os.getenv("ASSISTANT_ADMIN_TELEGRAM_ID"))
  }
}
open("build-info.json","w").write(json.dumps(info, indent=2))
print(json.dumps(info, indent=2))
PY

# B) Archive the exact working sources
tar -czf "releases/${REL}.tar.gz" app.py telegram_polling.py build-info.json || true

# C) Optional git note (best effort)
git add -A 2>/dev/null && git commit -m "release: ${REL}" 2>/dev/null || true
git tag -f "${REL}" 2>/dev/null || true

# D) Idempotent: make sure webhook is OFF (polling mode)
curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook" \
| python3 - <<'PY'
import sys,json; d=json.load(sys.stdin); print("deleteWebhook ok=", d.get("ok"))
PY

# E) Snapshot health + last logs into release_logs
{
  echo "=== ${REL} health ==="
  echo -n "Proc: " && ps aux | grep -E "telegram_polling|gunicorn" | grep -v grep || true
  echo -n "Webhook URL: " && curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo" \
   | python3 - <<'PY'
import sys,json; d=json.load(sys.stdin); print(d.get('result',{}).get('url'))
PY
  echo -n "Pending: " && curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getUpdates?timeout=1" \
   | python3 - <<'PY'
import sys,json; d=json.load(sys.stdin); print(len(d.get('result',[])))
PY
  echo "--- last 40 lines ---"
  tail -n 40 live_bot.log 2>/dev/null || echo "no live_bot.log"
} > "release_logs/${REL}.log" 2>&1

echo "Release stamped as: ${REL}"
