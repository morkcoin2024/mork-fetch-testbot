# === ONE-TIME FIX + START SINGLE POLLER (safe to re-run) =====================
set -euo pipefail

echo "[A] Make RUN start the correct app with polling enabled…"
cat > .replit <<'INI'
run = "env POLLING_ENABLED=1 LOG_LEVEL=INFO PYTHONUNBUFFERED=1 gunicorn app:app --bind 0.0.0.0:5000 --workers=1 --reload"
INI

echo "[B] Kill anything that could own the token…"
pkill -f 'gunicorn .*app:app' || true
pkill -f 'gunicorn .*main:app' || true
pkill -f 'production_polling_bot\.py|working_polling_bot\.py|simple_polling_bot\.py' || true
rm -f /tmp/mork_polling.lock || true

echo "[C] Force polling mode (no webhook)…"
curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook" >/dev/null || true

echo "[D] Start ONE worker (app:app) with polling enabled…"
env POLLING_ENABLED=1 LOG_LEVEL=INFO PYTHONUNBUFFERED=1 \
  nohup gunicorn app:app --bind 0.0.0.0:5000 --workers=1 --reload \
    > /tmp/guni.out 2>&1 &

sleep 4
echo; echo "=== PROCESSES (expect ONE *app:app*) ==="
ps aux | grep -E 'gunicorn .*app:app|gunicorn .*main:app' | grep -v grep || true

echo; echo "=== WEBHOOK (should be empty) ==="
curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo" \
 | python3 - <<'PY'
import sys,json
d=json.load(sys.stdin).get('result',{})
print("url =", d.get('url')); print("pending =", d.get('pending_update_count'))
PY

echo; echo "=== SEND LIVE TESTS (/ping, /version) ==="
curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
  -d "chat_id=${ASSISTANT_ADMIN_TELEGRAM_ID}" -d "text=/ping" >/dev/null
curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
  -d "chat_id=${ASSISTANT_ADMIN_TELEGRAM_ID}" -d "text=/version" >/dev/null

sleep 3
echo; echo "=== LAST 120 LINES OF /tmp/guni.out ==="
tail -n 120 /tmp/guni.out || true

echo; echo ">>> You should see in the log:"
echo "• 'Telegram bot enabled successfully' and 'Polling service started'"
echo "• 'Processing command '/ping'' and 'Response sent: True'"
