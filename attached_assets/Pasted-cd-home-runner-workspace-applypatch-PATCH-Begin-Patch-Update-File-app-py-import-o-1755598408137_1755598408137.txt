cd /home/runner/workspace

applypatch <<'PATCH'
*** Begin Patch
*** Update File: app.py
@@
-import os, re, json, time, logging
+import os, re, json, time, logging
+from datetime import datetime, timezone
@@
-# --- globals / config ---
+# --- globals / config ---
+LOADED_AT_UTC = datetime.now(timezone.utc).strftime("%Y-%m-%dT%H:%M:%SZ")
+
+def _router_sha20():
+    """Hash of the currently-loaded router implementation (runtime, not build)."""
+    import inspect, hashlib
+    return hashlib.sha256(inspect.getsource(process_telegram_command).encode()).hexdigest()[:20]
@@
-    if cmd == "/version":
-        # old behavior: static build stamp
-        info = {}
-        try:
-            info = json.load(open("build-info.json","r"))
-        except Exception:
-            info = {}
-        label = info.get("label","stable")
-        ts = info.get("release_ts_utc","(unknown)")
-        mode = "Polling (integrated)"
-        router = str(hash(process_telegram_command))
-        return _reply(f"📜 Release: {label} {ts}\nMode: {mode}\nRouter: {router}")
+    if cmd == "/version":
+        # New behavior: prefer runtime stamp + runtime router hash; fall back to build-info if present
+        runtime_ts = LOADED_AT_UTC
+        runtime_router = _router_sha20()
+        mode = "Polling (integrated)"
+        label, ts = "runtime", runtime_ts
+        try:
+            info = json.load(open("build-info.json","r"))
+            # keep build tag for reference, but *display* runtime load time first
+            label = info.get("label", "runtime")
+            # show both lines so we can see build vs runtime at a glance
+            build_ts = info.get("release_ts_utc", "(none)")
+            return _reply(
+                "📜 Release: {label} (build {build_ts})\n"
+                "⏱ Runtime: {runtime_ts}\n"
+                "Mode: {mode}\n"
+                "RouterSHA20: {router}".format(
+                    label=label, build_ts=build_ts, runtime_ts=runtime_ts, mode=mode, router=runtime_router
+                )
+            )
+        except Exception:
+            return _reply(
+                "📜 Release: runtime {runtime_ts}\n"
+                "Mode: {mode}\n"
+                "RouterSHA20: {router}".format(
+                    runtime_ts=runtime_ts, mode=mode, router=runtime_router
+                )
+            )
*** End Patch
PATCH
