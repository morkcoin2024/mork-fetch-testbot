# === A) Make RUN the ONLY poller and serve the right module ===
cd /home/runner/workspace

# 1) Ensure webhook is OFF (polling mode)
curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook" >/dev/null || true

# 2) Stop anything that could be polling
pkill -f production_polling_bot\.py   || true
pkill -f working_polling_bot\.py      || true
pkill -f simple_polling_bot\.py       || true
pkill -f gunicorn                     || true
rm -f /tmp/mork_polling.lock || true
sleep 2

# 3) RUN instance will poll; Deploy must NOT poll (pause Deploy or set its POLLING_ENABLED=0)
export POLLING_ENABLED=1

# 4) Serve the correct app (must be app:app, not main:app)
gunicorn app:app --bind 0.0.0.0:5000 --workers=1 --reload &
sleep 2
ps aux | grep gunicorn | grep -v grep

# 5) Sanityâ€”runtime router really has /source
python3 - <<'PY'
import app,inspect,hashlib
src = inspect.getsource(app.process_telegram_command)
print("[sanity] /source present? ", 'elif cmd == \"/source\"' in src)
print("[sanity] router_sha20: ", hashlib.sha256(src.encode()).hexdigest()[:20])
PY

# === B) Make /version show the CURRENT router hash (not a stale build file) ===
applypatch <<'PATCH'
*** Begin Patch
*** Update File: app.py
@@
-    if cmd == "/version":
-        # existing reply...
-        return _reply(_build_version_message(), status="ok")
+    if cmd == "/version":
+        try:
+            import inspect, hashlib
+            router_src = inspect.getsource(process_telegram_command)
+            sha20 = hashlib.sha256(router_src.encode()).hexdigest()[:20]
+            extra = f"RouterSHA20: {sha20}"
+        except Exception:
+            extra = "RouterSHA20: n/a"
+        return _reply(_build_version_message(extra_line=extra), status="ok")
*** End Patch
PATCH

# If _build_version_message(extra_line=...) signature doesn't exist yet, add a no-op fallback:
applypatch <<'PATCH'
*** Begin Patch
*** Update File: app.py
@@
-def _build_version_message():
-    return f"ðŸ“œ Release: stable 2025-08-18T18:43:26Z\nMode: Polling (integrated)\nRouter: 8315620859661394571"
+def _build_version_message(extra_line: str = ""):
+    base = ("ðŸ“œ Release: stable 2025-08-18T18:43:26Z\n"
+            "Mode: Polling (integrated)\n"
+            "Router: 8315620859661394571")
+    if extra_line:
+        base += f"\n{extra_line}"
+    return base
*** End Patch
PATCH

# 6) Hot-reload gunicorn to pick up the patch
pkill -HUP -f "gunicorn app:app" || true
sleep 2

# 7) Final checks:
echo "=== webhook ==="
curl -s "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo" | python3 - <<'PY'
import sys,json; d=json.load(sys.stdin); r=d.get("result",{})
print("url=", r.get("url"), " pending=", r.get("pending_update_count"))
PY

echo "=== processes ==="
ps aux | grep -E "gunicorn|polling_bot|telegram_polling" | grep -v grep || true
