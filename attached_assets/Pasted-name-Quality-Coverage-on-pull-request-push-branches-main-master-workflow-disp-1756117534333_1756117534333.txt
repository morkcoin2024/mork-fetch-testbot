name: Quality & Coverage

on:
  pull_request:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PYTHONPATH: .

jobs:
  lint-typecheck:
    name: Lint & Type Check (py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]  # expand later if needed

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install dev tools
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          fi
          if [ -f requirements-test.txt ]; then
            python -m pip install -r requirements-test.txt
          else
            python -m pip install ruff black mypy
          fi

      - name: Ruff
        run: ruff check .

      - name: Black (check only)
        run: black --check .

      - name: Mypy
        run: mypy .

  coverage:
    name: Coverage (smoke)
    runs-on: ubuntu-latest
    needs: lint-typecheck
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-3.10-${{ hashFiles('requirements*.txt', 'pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-3.10-

      - name: Install test deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then
            python -m pip install -r requirements.txt
          fi
          if [ -f requirements-test.txt ]; then
            python -m pip install -r requirements-test.txt
          else
            python -m pip install coverage httpx python-telegram-bot websockets
          fi

      - name: Run coverage smoke
        run: |
          bash scripts/run_coverage.sh || true  # donâ€™t fail PRs on low % yet

      - name: Upload coverage.xml
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml