cd /home/runner/workspace

echo "=== A) Prove /source exists in current app.py ==="
python3 - <<'PY'
import inspect, hashlib, app
src = inspect.getsource(app.process_telegram_command)
print("router_sha20 =", hashlib.sha256(src.encode()).hexdigest()[:20])
print("has_/source  =", 'elif cmd == "/source"' in src)
# Smoke test against the router (not Telegram):
def mk(t):
    upd={'message':{'message_id':1,'date':0,'chat':{'id':1,'type':'private'},
                    'from':{'id':1,'is_bot':False,'username':'probe'},'text':t}}
    out = app.process_telegram_command(upd) or {}
    print(f"{t:14} -> {out.get('status'):<12} | {(out.get('response') or '')[:70].replace('\n',' ')}")
for t in ["/source", "/source sim", "/price So1111111111111111111111111111111111111112"]:
    mk(t)
PY

echo "=== B) Make sure only ONE integrated worker is running ==="
# Polling must be in the gunicorn worker we control; no stray pollers.
curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/deleteWebhook" >/dev/null 2>&1 || true
pkill -f production_polling_bot\.py   || true
pkill -f working_polling_bot\.py      || true
pkill -f simple_polling_bot\.py       || true
pkill -f gunicorn || true
rm -rf __pycache__ */__pycache__ 2>/dev/null || true
sleep 2
echo "(expect no gunicorn lines below yet)"; ps aux | grep gunicorn | grep -v grep || true

echo "=== C) Let Replit workflow respawn gunicorn (integrated poller) ==="
# Replit will auto-restart. Give it a few seconds then confirm:
sleep 5
echo "(expect master + one worker below)" && ps aux | grep gunicorn | grep -v grep || true

echo "=== D) Live Telegram probe to YOUR admin DM ==="
# Sends /source, /source sim, then /price to your admin chat via Telegram API
if [ -n "${ASSISTANT_ADMIN_TELEGRAM_ID:-}" ]; then
  CHAT="$ASSISTANT_ADMIN_TELEGRAM_ID"
  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
       -d "chat_id=${CHAT}" -d "text=/source" >/dev/null
  sleep 2
  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
       -d "chat_id=${CHAT}" -d "text=/source sim" >/dev/null
  sleep 2
  curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
       -d "chat_id=${CHAT}" -d "text=/price So1111111111111111111111111111111111111112" >/dev/null
  echo "Sent 3 test messages to admin chat ($CHAT). Check Telegram now."
else
  echo "ASSISTANT_ADMIN_TELEGRAM_ID is not set; send /source, /source sim, /price <MINT> manually in DM."
fi
